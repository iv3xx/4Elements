var Layout=function(){var t=function(){$(window).scrollTop()>60?$("body").addClass("page-on-scroll"):$("body").removeClass("page-on-scroll")},o=function(){$(".navbar").offset().top>150&&$(".navbar-fixed-top").addClass("top-nav-collapse"),$(window).scroll(function(){$(".navbar").offset().top>150?$(".navbar-fixed-top").addClass("top-nav-collapse"):$(".navbar-fixed-top").removeClass("top-nav-collapse")});var t=0;t=$(".navbar-fixed-top").height()-20,$(".js_nav-item a").bind("click",function(o){var a=$($(this).attr("href")).offset().top;$("html, body").stop().animate({scrollTop:a-t},600),o.preventDefault()});$("body").scrollspy({target:".navbar-fixed-top",offset:t+2});$(window).scroll(function(){$(".navbar-collapse.in").collapse("hide")})},a=function(){var t=$(".carousel .item"),o=$(window).height();t.eq(0).addClass("active"),t.height(o),t.addClass("full-screen"),$(".carousel img").each(function(){var t=$(this).attr("src"),o=$(this).attr("data-color");$(this).parent().css({"background-image":"url("+t+")","background-color":o}),$(this).remove()}),$(window).on("resize",function(){o=$(window).height(),t.height(o)})},e=function(){$("[data-auto-height]").each(function(){var t=$(this),o=$("[data-height]",t),a=0,e=t.attr("data-mode"),i=parseInt(t.attr("data-offset")?t.attr("data-offset"):0);o.each(function(){"height"==$(this).attr("data-height")?$(this).css("height",""):$(this).css("min-height","");var t="base-height"==e?$(this).outerHeight():$(this).outerHeight(!0);t>a&&(a=t)}),a+=i,o.each(function(){"height"==$(this).attr("data-height")?$(this).css("height",a):$(this).css("min-height",a)}),t.attr("data-related")&&$(t.attr("data-related")).css("height",t.height())})},i=function(){var t=$(".work-popup-overlay"),o=$(".work-popup-close"),a=$(".work-popup-trigger");a.on("click",function(){$(this).find(".work-popup-overlay").removeClass("work-popup-overlay-show"),$(this).find(".work-popup-overlay").addClass("work-popup-overlay-show")}),o.on("click",function(o){o.stopPropagation(),t.removeClass("work-popup-overlay-show")})};return{init:function(){t(),o(),a(),e(),i(),$(window).scroll(function(){t()})},getViewPort:function(){var t=window,o="inner";return"innerWidth"in window||(o="client",t=document.documentElement||document.body),{width:t[o+"Width"],height:t[o+"Height"]}}}}();$(document).ready(function(){Layout.init()});

//КАБЛУК
function MessageBOX()
{
    var result= confirm("Приступаем?");

    if (result) { document.getElementById("Go").style.display= "block";}  
 else {document.getElementById("Refusal").style.display = "block";}

}

function calculateHeel()
{

    var pol = document.querySelector('input[name="pol"]:checked').value;
    var footL = document.getElementById("footL").value;
    var result= "";
    var Image = document.getElementById("Image");

    if (pol === "boy") 
    {
        result= "Высота каблука 1 см.";
        Image.src = "img/boot2.png";
    } 
    else if (pol === "girl") {
        var heelHeight = footL / 7;
        result = "Высота каблука " + heelHeight.toFixed(0) + " см.";
        if (heelHeight > 5) {
           Image.src = "img/boot3.png";
        } else {
         Image.src = "img/boot1.png";
        }
    }

    document.getElementById("result").textContent = result;
    Image.style.display = "block";

}

window.onload = function() {
    MessageBOX();
 }



//ВИКТОРИНА



 questions = [
    {
        question: "А голос у него был не такой, как у почтальона Печкина, дохленький. У Гаврюши голосище был, как у электрички. Он _____ _____ на ноги поднимал.",
        correctly: "Полдеревни, зараз",
        note: "Раздельно существительное будет писаться в случае наличия дополнительного слова между существительным и частицей. Правильный ответ: полдеревни пишется слитно. Зараз (ударение на второй слог) — это обстоятельственное наречие, пишется слитно. Означает быстро, одним махом.",
        wrongAns: [
            "Пол-деревни, за раз",
            "Пол деревни, за раз"
        ]
    },
    {
        question: "А эти слова как пишутся?",
        correctly: "Капучино и эспрессо",
        note: "По орфографическим нормам русского языка единственно верным написанием будут «капучино» и «эспрессо».",
        wrongAns: [
            "Капуччино и эспрессо",
            "Каппуччино и экспресо"
        ]
    },
    {
        question: "Как нужно писать?",
        correctly: "Чересчур",
        note: "Это слово появилось от соединения предлога «через» и древнего слова «чур», которое означает «граница», «край». Но слово претерпело изменения, так что правильное написание учим наизусть — «чересчур».",
        wrongAns: [
            "Черезчур",
            "Черес-чур"
        ]
    },
    {
        question: "Где допущена ошибка?",
        correctly: "Эпелепсия",
        note: "Ошибка в слове Эпелепсия. Слово пишется так: «эпИлепсия». Радостно, если это слово касается вас только в формате 'Как писать правильно'.",
        wrongAns: [
            "Аккордеон",
            "Белиберда"
        ]
    }
]

var nowQuestionIndex = 0;
const questBlock = document.getElementById('questions');
let correctly = null;
let lastQuestion = null;
let counterCorrectly = 0;
let wrongAns = [];

questions = rndArray(questions)

function rndArray(array) { //перемешиваем вопросы
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
}

function createQuestion(questionIndex) {
    if (questionIndex >= questions.length) {
        showResult();
        return;
    }
    if (questBlock.innerHTML !== '') {
        let breakElement = document.createElement('div');
        breakElement.setAttribute('class', 'flex-break');
        questBlock.appendChild(breakElement);
    }
    let question = questions[questionIndex];
    let questionDiv = document.createElement('div');
    questionDiv.setAttribute('class', 'question');
    questionDiv.setAttribute('num', questionIndex);
    questionDiv.innerHTML = (questionIndex + 1) + ". " + question.question;
    questBlock.appendChild(questionDiv);
    lastQuestion = questionDiv;
    let allAnswers = rndArray(question.wrongAns.concat([question.correctly]));
    
    allAnswers.forEach(element => {
        answerDiv = document.createElement('div');
        answerDiv.setAttribute('class', 'answer');
        answerDiv.innerHTML = element;
        questBlock.appendChild(answerDiv);
        if (element === question.correctly) {
            correctly = answerDiv;
        } else {
            wrongAns.push(answerDiv);
        }
        answerDiv.addEventListener('click', (event) => onClickAnswer(event));
    });
}

function hideElement(element) { //Смещение элементов после ответа
    element.style.transition = "transform 5s, opacity 5s";
    element.style.transform = "translateY(500%)";
    element.style.opacity = 0;
    setTimeout(function () {
        element.remove();
    }, 2000);
}

function onClickAnswer(event) {
    wrongAns.forEach(element => hideElement(element));
    hideElement(correctly);
    setTimeout(() => {
        if (correctly != null && event.srcElement === correctly) {
            imgElement = document.createElement("img");
            imgElement.src = "img/corectly.svg";
            lastQuestion.appendChild(imgElement);
            counterCorrectly += 1;
        } else {
            imgElement = document.createElement("img");
            imgElement.src = "img/wrong.svg";
            lastQuestion.appendChild(imgElement);
            lastQuestion.innerHTML += '';
        }
        note = document.createElement('div');
        note.setAttribute('class', 'note');
        questBlock.appendChild(note);
       // note.classList.add('flex-break');
        note.innerHTML = questions[nowQuestionIndex].note;
        setTimeout(
            () => {
                hideElement(note)
                setTimeout(() => {
                    nowQuestionIndex += 1;
                    createQuestion(nowQuestionIndex);
                }, 2000);
            }, 2000
        );
    }, 2000);
}

function showResult() {
    let resultDiv = document.createElement("a");
    resultDiv.setAttribute("class", "results flex-break");
    resultDiv.innerHTML = "ВОПРОСЫ ЗАКОНЧИЛИСЬ! Результат: " + counterCorrectly + "/" + questions.length;
    resultDiv.style.marginLeft = "1%";
    resultDiv.style.fontSize= "40px";
    resultDiv.style.color= "white";
    questBlock.insertBefore(resultDiv, questBlock.firstChild)
    let i = 0
    questBlock.querySelectorAll("div.question").forEach(
        question => {
            question.addEventListener(
                'click',
                (event) => {
                    questBlock.querySelectorAll("div.answer").forEach((element) => element.remove());
                    answerDiv = document.createElement("div");
                    answerDiv.setAttribute("class", "answer");
                    answerDiv.innerHTML = questions[parseInt(question.getAttribute('num'))].correctly;
                    questBlock.insertBefore(answerDiv, question.nextSibling);
                }
            )
            i++;
        }
    )
}

createQuestion(nowQuestionIndex);